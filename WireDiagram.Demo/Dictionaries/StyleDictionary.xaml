<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:custom="clr-namespace:WireDiagram.CustomElements;assembly=WireDiagram.CustomElements">

    <Style x:Key="CustomElementLineStyleKey" TargetType="{x:Type custom:CustomElementLine}">
        <Setter Property="Stroke" Value="Yellow"/>
        <Setter Property="Thickness" Value="0.05cm"/>
        <Setter Property="EnableLineBreak" Value="False"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Stroke" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomElementRectangleStyleKey" TargetType="{x:Type custom:CustomElementRectangle}">
        <Setter Property="Foreground" Value="Yellow"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Thickness" Value="0.05cm"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomElementRectangleFrameStyleKey" TargetType="{x:Type custom:CustomElementRectangle}">
        <Setter Property="Foreground" Value="Yellow"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Thickness" Value="0.05cm"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomElementRectangleFilledStyleKey" TargetType="{x:Type custom:CustomElementRectangle}">
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Background" Value="Yellow"/>
        <Setter Property="Thickness" Value="0.05cm"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomElementPinStyleKey" TargetType="{x:Type custom:CustomElementPin}">
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Background" Value="Yellow"/>
        <Setter Property="Width" Value="0.17cm"/>
        <Setter Property="Height" Value="0.17cm"/>
        <Setter Property="Thickness" Value="0.17cm"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="Background" Value="DeepPink"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomElementNodePinStyleKey" TargetType="{x:Type custom:CustomElementPin}">
        <Setter Property="Foreground" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="0.17cm"/>
        <Setter Property="Height" Value="0.17cm"/>
        <Setter Property="Thickness" Value="0.17cm"/>
        <Style.Triggers>
            <!--
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Background" Value="Red"/>
            </DataTrigger>
            -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="Background" Value="DeepPink"/>
            </Trigger>

            <!--
            <DataTrigger Binding="{Binding Path=IsConnected}" Value="true">
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </DataTrigger>
            -->

            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Foreground" Value="Transparent"/>
                <Setter Property="Background" Value="Transparent"/>
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="CustomElementLineWireStyleKey" TargetType="{x:Type custom:CustomElementLine}">
        <Setter Property="Stroke" Value="DeepPink"/>
        <Setter Property="Thickness" Value="0.05cm"/>
        <Setter Property="EnableLineBreak" Value="True"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Stroke" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NodeCustomElementTextStyleKey" TargetType="{x:Type custom:CustomElementText}">
        <Setter Property="Foreground" Value="Yellow"/>
        <Setter Property="EmSize" Value="0.5cm"/>
        <Setter Property="TypefaceName" Value="Arial"/>
        <Setter Property="VerticalTextAlignment" Value="Center"/>
        <Setter Property="HorizontalTextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NodeTextBlockStyleKey" TargetType="TextBlock">
        <Setter Property="Foreground" Value="Yellow"/>
        <Setter Property="FontSize" Value="0.5cm"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                <Setter Property="Foreground" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NodeCanvasStyleKey" TargetType="Canvas">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="ClipToBounds" Value="False"/>
    </Style>

    <Style x:Key="NodeGridStyleKey" TargetType="Grid">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="ClipToBounds" Value="False"/>
    </Style>

</ResourceDictionary>